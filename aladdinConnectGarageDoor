/*

Copyright 2020 - tomw

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Change history:

2.0.0(dev) - tomw - Update to new API flow

 */

metadata
{
    definition(name: "Aladdin Connect Garage Door", namespace: "tomw", author: "tomw", importUrl: "")
    {
        capability "Actuator"
        capability "Battery"
        capability "GarageDoorControl"
        capability "SignalStrength"
    }
}

import groovy.transform.Field
@Field Map doorStates = 
    [
        0: "unknown",
        1: "open",
        2: "opening",
        3: "unknown",
        4: "closed",
        5: "closing",
        6: "unknown",
        7: "unknown"
    ]

def refreshFromMaster(door)
{
    if(!door)
    {
        return
    }
    
    def stateVal = doorStates[door.status]
    
    if(door.status in [2, 5])
    {
        unschedule()
        runIn(10, requestRefresh)
    }
        
    sendEvent(name: "door", value: stateVal)
    
    sendEvent(name: "battery", value: door.battery_level)
    sendEvent(name: "rssi", value: door.ble_strength)
}

def close()
{
    parent?.componentClose(this.device)
    
    // estimate is <10s response time, 10s operation time
    unschedule()
    runIn(20, requestRefresh)
}

def open()
{
    parent?.componentOpen(this.device)
    
    // estimate is <10s response time, 10s operation time
    unschedule()
    runIn(20, requestRefresh)
}

def requestRefresh()
{
    parent?.refreshFromChild()
}
